{"version":3,"sources":["webpack:///./src/ScrollableInkTabBar.js?6d8b*","webpack:///./src/ScrollableTabBarMixin.js?ef25*","webpack:///./examples/antd.js","webpack:///./src/InkTabBar.js"],"names":["ScrollableInkTabBar","createReactClass","displayName","mixins","render","inkBarNode","getInkBarNode","tabs","getTabs","scrollbarNode","getScrollBarNode","getRootNode","getDefaultProps","scrollAnimated","onPrevClick","onNextClick","getInitialState","offset","next","prev","componentDidMount","componentDidUpdate","prevProps","props","tabBarPosition","setOffset","nextPrev","setNextPrev","isNextPrevShown","state","setState","scrollToActiveTab","activeKey","navNode","refs","nav","navNodeWH","getOffsetWH","navWrapNode","navWrap","navWrapNodeWH","minOffset","setNext","setPrev","node","prop","getOffsetLT","getBoundingClientRect","checkNextPrev","target","Math","min","navOffset","navStyle","style","transformSupported","isTransformSupported","value","name","setTransform","v","activeTab","activeTabWH","wrapOffset","activeTabOffset","e","content","prefixCls","nextButton","prevButton","showNextPrev","classnames","navClassName","navClasses","PanelContent","console","log","id","nextProps","length","round","random","count","Array","i","join","els","map","c","React","Component","construct","start","num","ends","index","push","Demo","onChange","key","onChange2","onTabClick","tick","changeTabPosition","scrollToActive","bar","switchToLast","saveBar","ends2","contentStyle","height","width","margin","ReactDOM","document","getElementById","InkTabBar"],"mappings":"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","file":"antd.js","sourcesContent":["import createReactClass from 'create-react-class';\nimport InkTabBarMixin from './InkTabBarMixin';\nimport ScrollableTabBarMixin from './ScrollableTabBarMixin';\nimport TabBarMixin from './TabBarMixin';\n\nconst ScrollableInkTabBar = createReactClass({\n  displayName: 'ScrollableInkTabBar',\n  mixins: [TabBarMixin, InkTabBarMixin, ScrollableTabBarMixin],\n  render() {\n    const inkBarNode = this.getInkBarNode();\n    const tabs = this.getTabs();\n    const scrollbarNode = this.getScrollBarNode([inkBarNode, tabs]);\n    return this.getRootNode(scrollbarNode);\n  },\n});\n\nexport default ScrollableInkTabBar;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ScrollableInkTabBar.js","import classnames from 'classnames';\nimport { setTransform, isTransformSupported } from './utils';\nimport React from 'react';\n\nexport default {\n  getDefaultProps() {\n    return {\n      scrollAnimated: true,\n      onPrevClick() {},\n      onNextClick() {},\n    };\n  },\n\n  getInitialState() {\n    this.offset = 0;\n    return {\n      next: false,\n      prev: false,\n    };\n  },\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  },\n\n  componentDidUpdate(prevProps) {\n    const props = this.props;\n    if (prevProps && prevProps.tabBarPosition !== props.tabBarPosition) {\n      this.setOffset(0);\n      return;\n    }\n    const nextPrev = this.setNextPrev();\n    // wait next, prev show hide\n    /* eslint react/no-did-update-set-state:0 */\n    if (this.isNextPrevShown(this.state) !== this.isNextPrevShown(nextPrev)) {\n      this.setState({}, this.scrollToActiveTab);\n    } else {\n      // can not use props.activeKey\n      if (!prevProps || props.activeKey !== prevProps.activeKey) {\n        this.scrollToActiveTab();\n      }\n    }\n  },\n\n  setNextPrev() {\n    const navNode = this.refs.nav;\n    const navNodeWH = this.getOffsetWH(navNode);\n    const navWrapNode = this.refs.navWrap;\n    const navWrapNodeWH = this.getOffsetWH(navWrapNode);\n    let { offset } = this;\n    const minOffset = navWrapNodeWH - navNodeWH;\n    let { next, prev } = this.state;\n    if (minOffset >= 0) {\n      next = false;\n      this.setOffset(0, false);\n      offset = 0;\n    } else if (minOffset < offset) {\n      next = (true);\n    } else {\n      next = (false);\n      this.setOffset(minOffset, false);\n      offset = minOffset;\n    }\n\n    if (offset < 0) {\n      prev = (true);\n    } else {\n      prev = (false);\n    }\n\n    this.setNext(next);\n    this.setPrev(prev);\n    return {\n      next,\n      prev,\n    };\n  },\n\n\n  getOffsetWH(node) {\n    const tabBarPosition = this.props.tabBarPosition;\n    let prop = 'offsetWidth';\n    if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n      prop = 'offsetHeight';\n    }\n    return node[prop];\n  },\n\n  getOffsetLT(node) {\n    const tabBarPosition = this.props.tabBarPosition;\n    let prop = 'left';\n    if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n      prop = 'top';\n    }\n    return node.getBoundingClientRect()[prop];\n  },\n\n  setOffset(offset, checkNextPrev = true) {\n    const target = Math.min(0, offset);\n    if (this.offset !== target) {\n      this.offset = target;\n      let navOffset = {};\n      const tabBarPosition = this.props.tabBarPosition;\n      const navStyle = this.refs.nav.style;\n      const transformSupported = isTransformSupported(navStyle);\n      if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n        if (transformSupported) {\n          navOffset = {\n            value: `translate3d(0,${target}px,0)`,\n          };\n        } else {\n          navOffset = {\n            name: 'top',\n            value: `${target}px`,\n          };\n        }\n      } else {\n        if (transformSupported) {\n          navOffset = {\n            value: `translate3d(${target}px,0,0)`,\n          };\n        } else {\n          navOffset = {\n            name: 'left',\n            value: `${target}px`,\n          };\n        }\n      }\n      if (transformSupported) {\n        setTransform(navStyle, navOffset.value);\n      } else {\n        navStyle[navOffset.name] = navOffset.value;\n      }\n      if (checkNextPrev) {\n        this.setNextPrev();\n      }\n    }\n  },\n\n  setPrev(v) {\n    if (this.state.prev !== v) {\n      this.setState({\n        prev: v,\n      });\n    }\n  },\n\n  setNext(v) {\n    if (this.state.next !== v) {\n      this.setState({\n        next: v,\n      });\n    }\n  },\n\n  isNextPrevShown(state) {\n    return state.next || state.prev;\n  },\n\n  scrollToActiveTab() {\n    const { activeTab, navWrap } = this.refs;\n    if (activeTab) {\n      const activeTabWH = this.getOffsetWH(activeTab);\n      const navWrapNodeWH = this.getOffsetWH(navWrap);\n      let { offset } = this;\n      const wrapOffset = this.getOffsetLT(navWrap);\n      const activeTabOffset = this.getOffsetLT(activeTab);\n      if (wrapOffset > activeTabOffset) {\n        offset += (wrapOffset - activeTabOffset);\n        this.setOffset(offset);\n      } else if ((wrapOffset + navWrapNodeWH) < (activeTabOffset + activeTabWH)) {\n        offset -= (activeTabOffset + activeTabWH) - (wrapOffset + navWrapNodeWH);\n        this.setOffset(offset);\n      }\n    }\n  },\n\n  prev(e) {\n    this.props.onPrevClick(e);\n    const navWrapNode = this.refs.navWrap;\n    const navWrapNodeWH = this.getOffsetWH(navWrapNode);\n    const { offset } = this;\n    this.setOffset(offset + navWrapNodeWH);\n  },\n\n  next(e) {\n    this.props.onNextClick(e);\n    const navWrapNode = this.refs.navWrap;\n    const navWrapNodeWH = this.getOffsetWH(navWrapNode);\n    const { offset } = this;\n    this.setOffset(offset - navWrapNodeWH);\n  },\n\n  getScrollBarNode(content) {\n    const { next, prev } = this.state;\n    const { prefixCls, scrollAnimated } = this.props;\n    let nextButton;\n    let prevButton;\n    const showNextPrev = prev || next;\n\n    if (showNextPrev) {\n      prevButton = (\n        <span\n          onClick={prev ? this.prev : null}\n          unselectable=\"unselectable\"\n          className={classnames({\n            [`${prefixCls}-tab-prev`]: 1,\n            [`${prefixCls}-tab-btn-disabled`]: !prev,\n          })}\n        >\n          <span className={`${prefixCls}-tab-prev-icon`} />\n        </span>\n      );\n\n      nextButton = (\n        <span\n          onClick={next ? this.next : null}\n          unselectable=\"unselectable\"\n          className={classnames({\n            [`${prefixCls}-tab-next`]: 1,\n            [`${prefixCls}-tab-btn-disabled`]: !next,\n          })}\n        >\n          <span className={`${prefixCls}-tab-next-icon`} />\n        </span>\n      );\n    }\n\n    const navClassName = `${prefixCls}-nav`;\n    const navClasses = classnames({\n      [navClassName]: true,\n      [\n        scrollAnimated ?\n          `${navClassName}-animated` :\n          `${navClassName}-no-animated`\n        ]: true,\n    });\n\n    return (\n      <div\n        className={classnames({\n          [`${prefixCls}-nav-container`]: 1,\n          [`${prefixCls}-nav-container-scrolling`]: showNextPrev,\n        })}\n        key=\"container\"\n        ref=\"container\"\n      >\n        {prevButton}\n        {nextButton}\n        <div className={`${prefixCls}-nav-wrap`} ref=\"navWrap\">\n          <div className={`${prefixCls}-nav-scroll`}>\n            <div className={navClasses} ref=\"nav\">\n              {content}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/ScrollableTabBarMixin.js","/* eslint react/no-multi-comp:0, no-console:0, react/prop-types:0 */\nimport 'rc-tabs/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Tabs, { TabPane } from 'rc-tabs';\nimport TabContent from '../src/TabContent';\nimport ScrollableInkTabBar from '../src/ScrollableInkTabBar';\nimport InkTabBar from '../src/InkTabBar';\n\nclass PanelContent extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.id, 'constructor');\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps.id, 'componentWillReceiveProps');\n  }\n\n  render() {\n    const length = Math.round(10 * (Math.random()) + 4);\n    const count = new Array(length);// new Array(4) skip forEach ....\n    for (let i = 0; i < length; i++) {\n      count[i] = 1;\n    }\n    const content = new Array(Math.round(100 * (Math.random())) + 4).join(` ${this.props.id}`);\n    const els = count.map((c, i) => {\n      return <p key={i}>{content}</p>;\n    });\n    return <div>{els}</div>;\n  }\n}\n\nfunction construct(start, num) {\n  const ends = [];\n  let index = 1;\n  for (let i = start; i < start + num; i++) {\n    ends.push(<TabPane\n      placeholder={`loading ${i}`}\n      tab={`tab ${i}`}\n      disabled={!!(i % 2)}\n      key={index}\n    >\n      <PanelContent id={i}/>\n    </TabPane>);\n    index++;\n  }\n  return ends;\n}\n\nclass Demo extends React.Component {\n  state = {\n    tabBarPosition: 'top',\n    activeKey: '3',\n    start: 0,\n  };\n\n  onChange = (key) => {\n    console.log(`onChange ${key}`);\n  }\n\n  onChange2 = (activeKey) => {\n    this.setState({ activeKey });\n  }\n\n  onTabClick = (key) => {\n    console.log(`onTabClick ${key}`);\n  }\n\n  tick = () => {\n    this.setState({\n      start: this.state.start + 10,\n    });\n  }\n\n  changeTabPosition = (e) => {\n    this.setState({\n      tabBarPosition: e.target.value,\n    });\n  }\n\n  scrollToActive = () => {\n    this.bar.scrollToActiveTab();\n  }\n\n  switchToLast = (ends) => {\n    if (this.state.activeKey !== ends[ends.length - 1].key) {\n      this.setState({ activeKey: ends[ends.length - 1].key }, this.scrollToActive);\n    } else {\n      this.scrollToActive();\n    }\n  }\n\n  saveBar = (bar) => {\n    this.bar = bar;\n  }\n\n  render() {\n    const start = this.state.start;\n    const ends = construct(start, 9);\n    const ends2 = construct(start, 3);\n    const tabBarPosition = this.state.tabBarPosition;\n    let style;\n    let contentStyle;\n    contentStyle = {\n      height: 400,\n    };\n    if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n      style = contentStyle;\n    } else {\n      style = {\n        width: 500,\n      };\n    }\n\n    return (\n      <div style={{ margin: 20 }}>\n        <h2>Simple Tabs</h2>\n        <p>\n          tabBarPosition:\n          <select value={this.state.tabBarPosition} onChange={this.changeTabPosition}>\n            <option value=\"top\">top</option>\n            <option value=\"bottom\">bottom</option>\n            <option value=\"left\">left</option>\n            <option value=\"right\">right</option>\n          </select>\n        </p>\n        <div>\n          <Tabs\n            defaultActiveKey=\"3\"\n            style={style}\n            tabBarPosition={this.state.tabBarPosition}\n            renderTabBar={() => <InkTabBar onTabClick={this.onTabClick}/>}\n            renderTabContent={() => <TabContent style={contentStyle}/>}\n            onChange={this.onChange}\n          >\n            {ends2}\n          </Tabs>\n        </div>\n        <h2>Scroll Tabs</h2>\n        <div>\n          <button onClick={() => this.switchToLast(ends)}>\n            switch to last tab\n          </button>\n          <Tabs\n            activeKey={this.state.activeKey}\n            style={style}\n            tabBarPosition={this.state.tabBarPosition}\n            renderTabBar={() => <ScrollableInkTabBar\n              ref={this.saveBar}\n              onTabClick={this.onTabClick}\n            />}\n            renderTabContent={() => <TabContent style={contentStyle}/>}\n            onChange={this.onChange2}\n          >\n            {ends}\n          </Tabs>\n        </div>\n        <button onClick={this.tick}>rerender</button>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/antd.js","import createReactClass from 'create-react-class';\nimport InkTabBarMixin from './InkTabBarMixin';\nimport TabBarMixin from './TabBarMixin';\n\nconst InkTabBar = createReactClass({\n  displayName: 'InkTabBar',\n  mixins: [TabBarMixin, InkTabBarMixin],\n  render() {\n    const inkBarNode = this.getInkBarNode();\n    const tabs = this.getTabs();\n    return this.getRootNode([inkBarNode, tabs]);\n  },\n});\n\nexport default InkTabBar;\n\n\n\n// WEBPACK FOOTER //\n// ./src/InkTabBar.js"],"sourceRoot":""}