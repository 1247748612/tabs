{"version":3,"sources":["webpack:///./src/ScrollableInkTabBar.js?6d8b***","webpack:///./src/ScrollableTabBarMixin.js?ef25***","webpack:///./examples/destroyInactiveTabpanel.js"],"names":["ScrollableInkTabBar","displayName","mixins","render","inkBarNode","getInkBarNode","tabs","getTabs","scrollbarNode","getScrollBarNode","getRootNode","getDefaultProps","scrollAnimated","onPrevClick","onNextClick","getInitialState","offset","next","prev","componentDidMount","componentDidUpdate","prevProps","props","tabBarPosition","setOffset","nextPrev","setNextPrev","isNextPrevShown","state","setState","scrollToActiveTab","activeKey","navNode","refs","nav","navNodeWH","getOffsetWH","navWrapNode","navWrap","navWrapNodeWH","minOffset","setNext","setPrev","node","prop","getOffsetLT","getBoundingClientRect","checkNextPrev","target","Math","min","navOffset","navStyle","style","transformSupported","value","name","v","activeTab","activeTabWH","wrapOffset","activeTabOffset","e","content","prefixCls","nextButton","prevButton","showNextPrev","navClassName","navClasses","PanelContent","console","log","id","componentWillReceiveProps","count","els","map","c","i","Component","Demo","start","onChange","key","onTabClick","tick","disabled","document","getElementById"],"mappings":"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","file":"destroyInactiveTabpanel.js","sourcesContent":["import createReactClass from 'create-react-class';\nimport InkTabBarMixin from './InkTabBarMixin';\nimport ScrollableTabBarMixin from './ScrollableTabBarMixin';\nimport TabBarMixin from './TabBarMixin';\n\nconst ScrollableInkTabBar = createReactClass({\n  displayName: 'ScrollableInkTabBar',\n  mixins: [TabBarMixin, InkTabBarMixin, ScrollableTabBarMixin],\n  render() {\n    const inkBarNode = this.getInkBarNode();\n    const tabs = this.getTabs();\n    const scrollbarNode = this.getScrollBarNode([inkBarNode, tabs]);\n    return this.getRootNode(scrollbarNode);\n  },\n});\n\nexport default ScrollableInkTabBar;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ScrollableInkTabBar.js","import classnames from 'classnames';\nimport { setTransform, isTransformSupported } from './utils';\nimport React from 'react';\n\nexport default {\n  getDefaultProps() {\n    return {\n      scrollAnimated: true,\n      onPrevClick() {},\n      onNextClick() {},\n    };\n  },\n\n  getInitialState() {\n    this.offset = 0;\n    return {\n      next: false,\n      prev: false,\n    };\n  },\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  },\n\n  componentDidUpdate(prevProps) {\n    const props = this.props;\n    if (prevProps && prevProps.tabBarPosition !== props.tabBarPosition) {\n      this.setOffset(0);\n      return;\n    }\n    const nextPrev = this.setNextPrev();\n    // wait next, prev show hide\n    /* eslint react/no-did-update-set-state:0 */\n    if (this.isNextPrevShown(this.state) !== this.isNextPrevShown(nextPrev)) {\n      this.setState({}, this.scrollToActiveTab);\n    } else {\n      // can not use props.activeKey\n      if (!prevProps || props.activeKey !== prevProps.activeKey) {\n        this.scrollToActiveTab();\n      }\n    }\n  },\n\n  setNextPrev() {\n    const navNode = this.refs.nav;\n    const navNodeWH = this.getOffsetWH(navNode);\n    const navWrapNode = this.refs.navWrap;\n    const navWrapNodeWH = this.getOffsetWH(navWrapNode);\n    let { offset } = this;\n    const minOffset = navWrapNodeWH - navNodeWH;\n    let { next, prev } = this.state;\n    if (minOffset >= 0) {\n      next = false;\n      this.setOffset(0, false);\n      offset = 0;\n    } else if (minOffset < offset) {\n      next = (true);\n    } else {\n      next = (false);\n      this.setOffset(minOffset, false);\n      offset = minOffset;\n    }\n\n    if (offset < 0) {\n      prev = (true);\n    } else {\n      prev = (false);\n    }\n\n    this.setNext(next);\n    this.setPrev(prev);\n    return {\n      next,\n      prev,\n    };\n  },\n\n\n  getOffsetWH(node) {\n    const tabBarPosition = this.props.tabBarPosition;\n    let prop = 'offsetWidth';\n    if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n      prop = 'offsetHeight';\n    }\n    return node[prop];\n  },\n\n  getOffsetLT(node) {\n    const tabBarPosition = this.props.tabBarPosition;\n    let prop = 'left';\n    if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n      prop = 'top';\n    }\n    return node.getBoundingClientRect()[prop];\n  },\n\n  setOffset(offset, checkNextPrev = true) {\n    const target = Math.min(0, offset);\n    if (this.offset !== target) {\n      this.offset = target;\n      let navOffset = {};\n      const tabBarPosition = this.props.tabBarPosition;\n      const navStyle = this.refs.nav.style;\n      const transformSupported = isTransformSupported(navStyle);\n      if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n        if (transformSupported) {\n          navOffset = {\n            value: `translate3d(0,${target}px,0)`,\n          };\n        } else {\n          navOffset = {\n            name: 'top',\n            value: `${target}px`,\n          };\n        }\n      } else {\n        if (transformSupported) {\n          navOffset = {\n            value: `translate3d(${target}px,0,0)`,\n          };\n        } else {\n          navOffset = {\n            name: 'left',\n            value: `${target}px`,\n          };\n        }\n      }\n      if (transformSupported) {\n        setTransform(navStyle, navOffset.value);\n      } else {\n        navStyle[navOffset.name] = navOffset.value;\n      }\n      if (checkNextPrev) {\n        this.setNextPrev();\n      }\n    }\n  },\n\n  setPrev(v) {\n    if (this.state.prev !== v) {\n      this.setState({\n        prev: v,\n      });\n    }\n  },\n\n  setNext(v) {\n    if (this.state.next !== v) {\n      this.setState({\n        next: v,\n      });\n    }\n  },\n\n  isNextPrevShown(state) {\n    return state.next || state.prev;\n  },\n\n  scrollToActiveTab() {\n    const { activeTab, navWrap } = this.refs;\n    if (activeTab) {\n      const activeTabWH = this.getOffsetWH(activeTab);\n      const navWrapNodeWH = this.getOffsetWH(navWrap);\n      let { offset } = this;\n      const wrapOffset = this.getOffsetLT(navWrap);\n      const activeTabOffset = this.getOffsetLT(activeTab);\n      if (wrapOffset > activeTabOffset) {\n        offset += (wrapOffset - activeTabOffset);\n        this.setOffset(offset);\n      } else if ((wrapOffset + navWrapNodeWH) < (activeTabOffset + activeTabWH)) {\n        offset -= (activeTabOffset + activeTabWH) - (wrapOffset + navWrapNodeWH);\n        this.setOffset(offset);\n      }\n    }\n  },\n\n  prev(e) {\n    this.props.onPrevClick(e);\n    const navWrapNode = this.refs.navWrap;\n    const navWrapNodeWH = this.getOffsetWH(navWrapNode);\n    const { offset } = this;\n    this.setOffset(offset + navWrapNodeWH);\n  },\n\n  next(e) {\n    this.props.onNextClick(e);\n    const navWrapNode = this.refs.navWrap;\n    const navWrapNodeWH = this.getOffsetWH(navWrapNode);\n    const { offset } = this;\n    this.setOffset(offset - navWrapNodeWH);\n  },\n\n  getScrollBarNode(content) {\n    const { next, prev } = this.state;\n    const { prefixCls, scrollAnimated } = this.props;\n    let nextButton;\n    let prevButton;\n    const showNextPrev = prev || next;\n\n    if (showNextPrev) {\n      prevButton = (\n        <span\n          onClick={prev ? this.prev : null}\n          unselectable=\"unselectable\"\n          className={classnames({\n            [`${prefixCls}-tab-prev`]: 1,\n            [`${prefixCls}-tab-btn-disabled`]: !prev,\n          })}\n        >\n          <span className={`${prefixCls}-tab-prev-icon`} />\n        </span>\n      );\n\n      nextButton = (\n        <span\n          onClick={next ? this.next : null}\n          unselectable=\"unselectable\"\n          className={classnames({\n            [`${prefixCls}-tab-next`]: 1,\n            [`${prefixCls}-tab-btn-disabled`]: !next,\n          })}\n        >\n          <span className={`${prefixCls}-tab-next-icon`} />\n        </span>\n      );\n    }\n\n    const navClassName = `${prefixCls}-nav`;\n    const navClasses = classnames({\n      [navClassName]: true,\n      [\n        scrollAnimated ?\n          `${navClassName}-animated` :\n          `${navClassName}-no-animated`\n        ]: true,\n    });\n\n    return (\n      <div\n        className={classnames({\n          [`${prefixCls}-nav-container`]: 1,\n          [`${prefixCls}-nav-container-scrolling`]: showNextPrev,\n        })}\n        key=\"container\"\n        ref=\"container\"\n      >\n        {prevButton}\n        {nextButton}\n        <div className={`${prefixCls}-nav-wrap`} ref=\"navWrap\">\n          <div className={`${prefixCls}-nav-scroll`}>\n            <div className={navClasses} ref=\"nav\">\n              {content}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/ScrollableTabBarMixin.js","/* eslint react/no-multi-comp:0, no-console:0, react/prop-types:0 */\nimport 'rc-tabs/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Tabs, { TabPane } from 'rc-tabs';\nimport TabContent from '../src/TabContent';\nimport ScrollableInkTabBar from '../src/ScrollableInkTabBar';\n\nclass PanelContent extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.id, 'constructor');\n  }\n\n  componentWillReceiveProps() {\n    console.log(this.props.id, 'componentWillReceiveProps');\n  }\n\n  render() {\n    const count = [1, 1, 1, 1];// new Array(4) skip forEach ....\n    const els = count.map((c, i) => {\n      return <p key={i}>{this.props.id}</p>;\n    });\n    return <div>{els}</div>;\n  }\n}\n\nclass Demo extends React.Component {\n  state = {\n    start: 0,\n  };\n\n  onChange = (key) => {\n    console.log(`onChange ${key}`);\n  }\n\n  onTabClick = (key) => {\n    console.log(`onTabClick ${key}`);\n  }\n\n  tick = () => {\n    this.setState({\n      start: this.state.start + 10,\n    });\n  }\n\n  render() {\n    const start = this.state.start;\n    const disabled = true;\n    return (\n      <div>\n        <h1>Simple Tabs</h1>\n        <Tabs\n          defaultActiveKey=\"2\"\n          destroyInactiveTabPane\n          renderTabBar={() => <ScrollableInkTabBar onTabClick={this.onTabClick}/>}\n          renderTabContent={() => <TabContent/>}\n          onChange={this.onChange}\n        >\n          <TabPane tab={`tab ${start}`} key=\"1\" placeholder=\"loading 1\">\n            <PanelContent id={start}/>\n          </TabPane>\n          <TabPane tab={`tab ${start + 1}`} key=\"2\" placeholder=\"loading 2\">\n            <PanelContent id={start + 1}/>\n          </TabPane>\n          <TabPane tab={`tab ${start + 2}`} key=\"3\" disabled={disabled}>\n            <PanelContent id={start + 2}/>\n          </TabPane>\n          <TabPane tab={`tab ${start + 3}`} key=\"4\" placeholder=\"loading 4\">\n            <PanelContent id={start + 3}/>\n          </TabPane>\n        </Tabs>\n        <button onClick={this.tick}>rerender</button>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/destroyInactiveTabpanel.js"],"sourceRoot":""}